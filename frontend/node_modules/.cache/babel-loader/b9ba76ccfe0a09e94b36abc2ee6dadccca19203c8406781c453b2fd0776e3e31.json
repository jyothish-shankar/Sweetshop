{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kodik\\\\sweet-shop-management\\\\frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport apiFetch from '../api/api';\nimport { useAuth } from '../hooks/useAuth';\nimport SweetCard from '../components/SweetCard';\nimport AdminSweetForm from '../components/AdminSweetForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [sweets, setSweets] = useState([]);\n  const {\n    auth,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const isAdmin = auth.role === 'admin';\n  useEffect(() => {\n    if (!auth.token) {\n      navigate('/login');\n    } else {\n      fetchSweets();\n    }\n  }, [auth.token, navigate]);\n  const fetchSweets = async () => {\n    try {\n      const data = await apiFetch('/sweets');\n      setSweets(data);\n    } catch (error) {\n      var _error$message;\n      console.error('Failed to fetch sweets', error);\n      if ((_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('401')) {\n        logout();\n        navigate('/login');\n      }\n    }\n  };\n  const handlePurchase = sweetId => {\n    setSweets(prevSweets => prevSweets.map(sweet => sweet.id === sweetId ? {\n      ...sweet,\n      quantity: sweet.quantity - 1\n    } : sweet));\n  };\n  const handleSweetAdded = newSweet => {\n    setSweets(prevSweets => [...prevSweets, newSweet]);\n  };\n  const handleDelete = async sweetId => {\n    if (window.confirm('Are you sure you want to delete this sweet?')) {\n      try {\n        await apiFetch(`/sweets/${sweetId}`, {\n          method: 'DELETE'\n        });\n        setSweets(sweets.filter(s => s.id !== sweetId));\n      } catch (error) {\n        alert(error.message || 'Failed to delete sweet.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to the Sweet Shop!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          logout();\n          navigate('/login');\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(AdminSweetForm, {\n      onSweetAdded: handleSweetAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Sweets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sweets-container\",\n      children: sweets.map(sweet => /*#__PURE__*/_jsxDEV(SweetCard, {\n        sweet: sweet,\n        onPurchase: handlePurchase,\n        isAdmin: isAdmin,\n        onDelete: handleDelete\n      }, sweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"9iIpFL/kk2b8scwxYuzqeDD9VxM=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","apiFetch","useAuth","SweetCard","AdminSweetForm","jsxDEV","_jsxDEV","HomePage","_s","sweets","setSweets","auth","logout","navigate","isAdmin","role","token","fetchSweets","data","error","_error$message","console","message","includes","handlePurchase","sweetId","prevSweets","map","sweet","id","quantity","handleSweetAdded","newSweet","handleDelete","window","confirm","method","filter","s","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSweetAdded","onPurchase","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/kodik/sweet-shop-management/frontend/src/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport apiFetch from '../api/api';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport SweetCard from '../components/SweetCard';\r\nimport AdminSweetForm from '../components/AdminSweetForm';\r\n\r\nconst HomePage = () => {\r\n  const [sweets, setSweets] = useState([]);\r\n  const { auth, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n  const isAdmin = auth.role === 'admin';\r\n\r\n  useEffect(() => {\r\n    if (!auth.token) {\r\n      navigate('/login');\r\n    } else {\r\n      fetchSweets();\r\n    }\r\n  }, [auth.token, navigate]);\r\n\r\n  const fetchSweets = async () => {\r\n    try {\r\n      const data = await apiFetch('/sweets');\r\n      setSweets(data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch sweets', error);\r\n      if (error.message?.includes('401')) {\r\n          logout();\r\n          navigate('/login');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePurchase = (sweetId) => {\r\n    setSweets(prevSweets =>\r\n      prevSweets.map(sweet =>\r\n        sweet.id === sweetId ? { ...sweet, quantity: sweet.quantity - 1 } : sweet\r\n      )\r\n    );\r\n  };\r\n  \r\n  const handleSweetAdded = (newSweet) => {\r\n      setSweets(prevSweets => [...prevSweets, newSweet]);\r\n  };\r\n\r\n  const handleDelete = async (sweetId) => {\r\n    if (window.confirm('Are you sure you want to delete this sweet?')) {\r\n        try {\r\n            await apiFetch(`/sweets/${sweetId}`, { method: 'DELETE' });\r\n            setSweets(sweets.filter(s => s.id !== sweetId));\r\n        } catch (error) {\r\n            alert(error.message || 'Failed to delete sweet.');\r\n        }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <header>\r\n        <h1>Welcome to the Sweet Shop!</h1>\r\n        <button onClick={() => { logout(); navigate('/login'); }}>Logout</button>\r\n      </header>\r\n      \r\n      {isAdmin && <AdminSweetForm onSweetAdded={handleSweetAdded} />}\r\n      \r\n      <h2>Available Sweets</h2>\r\n      <div className=\"sweets-container\">\r\n        {sweets.map((sweet) => (\r\n          <SweetCard \r\n            key={sweet.id} \r\n            sweet={sweet} \r\n            onPurchase={handlePurchase} \r\n            isAdmin={isAdmin} \r\n            onDelete={handleDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}